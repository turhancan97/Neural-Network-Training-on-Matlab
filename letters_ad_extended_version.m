%% Letter Recognition
clc
clear all
%% Input Vectors
PA = [0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1];
PB = [1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 1 1 1 0];
PC = [0 1 1 1 0  1 0 0 0 1  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0  1 0 0 0 1  0 1 1 1 0];
PD = [1 1 1 0 0  1 0 0 1 0  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 1 0  1 1 1 0 0];
PE = [1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1];
PF = [1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0];
PG = [1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 0 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1];
PH = [1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1];
PI = [0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0];
PJ = [1 1 1 1 1  0 0 0 1 0  0 0 0 1 0  1 0 0 1 0  1 0 0 1 0  1 0 0 1 0  0 1 1 1 0];
PK = [1 0 0 0 1  1 0 0 0 1  1 0 0 1 0  1 1 1 0 0  1 0 0 1 0  1 0 0 0 1  1 0 0 0 1];
PL = [1 0 0 0 0  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1];
PM = [1 0 0 0 1  1 1 0 1 1  1 0 1 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1];
PN = [1 0 0 0 1  1 1 0 0 1  1 0 1 0 1  1 0 1 0 1  1 0 0 1 1  1 0 0 1 1  1 0 0 0 1];
PO = [1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1];
PP = [1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 1 1 1 0  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0];
PQ = [0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 1 0 1  0 1 1 1 0];
PR = [1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 0 0 1 0  1 1 1 0 0  1 0 0 1 0  1 0 0 0 1];
PS = [0 1 1 1 0  1 0 0 0 1  1 0 0 0 0  0 1 1 1 0  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0];
PT = [1 1 1 1 1  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0];
PU = [1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0];
PV = [1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  0 1 0 1 0  0 0 1 0 0];
PW = [1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 1 0 1  1 1 0 1 1  1 0 0 0 1];
PX = [1 0 0 0 1  1 0 0 0 1  0 1 0 1 0  0 0 1 0 0  0 1 0 1 0  1 0 0 0 1  1 0 0 0 1];
PY = [1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  0 1 0 1 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0];
PZ = [1 1 1 1 1  0 0 0 0 1  0 0 0 1 0  0 0 1 0 0  0 1 0 0 0  1 0 0 0 0  1 1 1 1 1];
% PA' -> Tanspose
P = [PA' PB' PC' PD' PE' PF' PG' PH' PI' PJ' PK' PL' PM' PN' PO' PP' PQ' PR' PS' PT' PU' PV' PW' PX' PY' PZ'];
%% Target Vectors
TA = [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TB = [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TC = [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TD = [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TE = [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TF = [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TG = [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TH = [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TI = [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TJ = [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TK = [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TL = [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
TM = [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0];
TN = [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0];
TO = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0];
TP = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0];
TQ = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0];
TR = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0];
TS = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0];
TT = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0];
TU = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0];
TV = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0];
TW = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0];
TX = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0];
TY = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0];
TZ = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1];
T = [TA' TB' TC' TD' TE' TF' TG' TH' TI' TJ' TK' TL' TM' TN' TO' TP' TQ' TR' TS' TT' TU' TV' TW' TX' TY' TZ'];
%% Neural Networks Training and Simulation
% range = [0 1; 0 1; 0 1; 0 1; 0 1;0 1; 0 1; 0 1; 0 1; 0 1;0 1; 0 1; 0 1; 0 1; 0 1;0 1; 0 1; 0 1; 0 1; 0 1;0 1; 0 1; 0 1; 0 1; 0 1;0 1; 0 1; 0 1; 0 1; 0 1;0 1; 0 1; 0 1; 0 1; 0 1]
range = [zeros(35,1) ones(35,1)];
net = newff(range,[30 26],{'tansig','purelin'});
% net = newff(range,[30 20 10 26],{'tansig' ,'purelin'});
net.trainParam.epochs = 50;
[net, tr, Y, E] = train(net,P,T);
% net = train(net, P, T, 'useGPU', 'yes'); % for faster train
ansA = sim(net,PA');
ansB = sim(net,PB');
ansC = sim(net,PC');
ansD = sim(net,PD');
ansALL = sim(net,P);
%% When there is error
% Error (We make noise here)
pA_err = PA;
pA_err(2:4) = 0.88;
error_A=sim(net,pA_err')